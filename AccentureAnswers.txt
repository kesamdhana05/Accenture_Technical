1.Difference between ‘this’ and ‘let’ and when to use what, explain with examples.

This- used to access global variables under the class
this.propertyName

Let – used to declare a variable with in a method.
let x;/let x:String; 

2. Write a function which accepts an array of strings and returns a map of character to count of the character (including spaces and special characters).


var input= ['hello world', 'hello world']

var str = input.join('')

var set = {}

for(var i = 0; i < str.length;i++){

set[str[i]]=0;

}

Object.keys(set).forEach(c=>{

set[c] =str.split('').filter(x=>x===c).length

}); 

3. Write a function to return all the keys present in an object at any level. 

Eg: input: {  a: 5, b: { c: { d: 10 } }}   output: [a, b, c, d]
 

var input = {  a: 5, b: { c: { d: 10 } }};

var output = new Set();

function findkeys(obj, keys){ 

  keys.forEach(c=>{

    output.add(c);

    if(typeof(obj[c])=='object'){

      output.add(

        Object.keys(obj[c])[0]

        );

        findkeys(obj[c],Object.keys(obj[c]))

      }

  });

}

findkeys(input,Object.keys(input))

console.log(Array.from(output)); 

4.       Write a function to reverse every word of a string. 

·         Using split and reverse


function reversingString(string) {

    return (string.split("").reverse().join(""));

}

 

·         Without using split and reverse and in O(1) space (since strings are immutable, assume that the input is a character array).

function reversingString(string) {

return (string == "" ? '' : reversingString(str.substr(1)) + str.charAt(0));

}

5.       Write a function to remove duplicate strings from an array of strings.


var baseArray = ['a','a', 'b']

 

        var filteredArray = []

     

        var duplicateArray = []

 

        baseArray.forEach(Item => {

           

            duplicateArray.push(Item);

 

            if (duplicateArray.filter(a => a === Item).length == 1) {

               

                filteredArray.push(Item);

            }

        })


 